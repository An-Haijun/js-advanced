(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{214:function(t,a,r){"use strict";r.r(a);var i=r(0),n=Object(i.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"bom"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#bom"}},[t._v("#")]),t._v(" BOM")]),t._v(" "),r("p",[r("strong",[t._v("本章内容")])]),t._v(" "),r("ul",[r("li",[t._v("理解 window 对象 —— BOM的核心")]),t._v(" "),r("li",[t._v("控制窗口、框架和弹出窗口")]),t._v(" "),r("li",[t._v("利用 location 对象中的页面信息")]),t._v(" "),r("li",[t._v("使用 navigator 对象了解浏览器")])]),t._v(" "),r("p",[t._v("ECMAScript 是 JavaScript 的核心，但如果要在 BOM 中使用 JavaScript，那么 BOM（浏览器对象模型）则无疑才是真正的核心。BOM 提供了很多对象，用于访问浏览器的功能，这些功能与任何网页内容无关。多年来，缺少事实上的规范导致 BOM 既有意思又有问题，因为浏览器提供商会按照自己的想法随意扩展它。于是，浏览器之间共有的对象成为了事实上的标准。这些对象得以在浏览器中存在，很大程度上是由于他们提供了与浏览器的互操作性。W3C 为了把浏览器中 JavaScript 最基本的部分标准化，已经将 BOM 的主要方面纳入了 HTML5 的规范中。")]),t._v(" "),r("p",[t._v("下一章节，将会详细介绍 window 对象。")])])}),[],!1,null,null,null);a.default=n.exports}}]);